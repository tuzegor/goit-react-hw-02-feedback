{"version":3,"sources":["components/Notification/Notification.module.css","components/Section/Section.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Statistics","this","props","good","neutral","bad","total","positivePercentage","className","styles","statistics","Component","FeedbackOptions","onLeaveFeedback","options","goodBtn","type","name","onClick","e","target","neutralBtn","badBtn","Notification","message","defaultProps","Section","title","children","App","state","countFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KACAA,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,yB,kKCGpBC,E,4JACJ,WACE,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,sBAAKC,UAAWC,IAAOC,WAAvB,UACE,uCAAUP,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,GAViBI,aAwBVX,I,gBCxBTY,E,4JACJ,WACE,IAAQC,EAAoBZ,KAAKC,MAAzBW,gBAER,OACE,sBAAKL,UAAWC,IAAOK,QAAvB,UACE,wBACEN,UAAWC,IAAOM,QAClBC,KAAK,SACLC,KAAK,OACLC,QAAS,SAAAC,GACPN,EAAgBM,EAAEC,OAAOH,OAL7B,kBAUA,wBACET,UAAWC,IAAOY,WAClBL,KAAK,SACLC,KAAK,UACLC,QAAS,SAAAC,GACPN,EAAgBM,EAAEC,OAAOH,OAL7B,qBAUA,wBACET,UAAWC,IAAOa,OAClBN,KAAK,SACLC,KAAK,MACLC,QAAS,SAAAC,GACPN,EAAgBM,EAAEC,OAAOH,OAL7B,wB,GA1BsBN,aA6CfC,I,iBC7CTW,E,4JACJ,WACE,IAAQC,EAAYvB,KAAKC,MAAjBsB,QAER,OAAO,mBAAGhB,UAAWC,IAAOe,QAArB,SAA+BA,Q,GAJfb,aAQ3BY,EAAaE,aAAe,CAC1BD,QAAS,aAMID,Q,iBCfTG,E,4JACJ,WACE,MAA4BzB,KAAKC,MAAzByB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACE,qCACE,oBAAIpB,UAAWC,IAAOkB,MAAtB,SAA8BA,IAC7BC,S,GAPajB,aAatBe,EAAQD,aAAe,CACrBE,MAAO,iBAOMD,QCnBTG,E,4MACJC,MAAQ,CACN3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP0B,cAAgB,SAAAd,GACd,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAAOgB,EAAUhB,GAAQ,O,EAI9BiB,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQ3B,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB8B,gCAAkC,WAChC,GAAI,EAAKL,MAAM3B,KAAO,EACpB,OAAOiC,KAAKC,MAAyB,IAAlB,EAAKP,MAAM3B,KAAc,EAAK+B,uB,4CAIrD,WACE,MAA+BjC,KAAK6B,MAA5B3B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQL,KAAKiC,qBACb3B,EAAqBN,KAAKkC,kCAEhC,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CAASmB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAASb,KAAK6B,MACdjB,gBAAiBZ,KAAK8B,kBAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACa,IAAVrB,EACC,cAAC,EAAD,CAAckB,QAAQ,yBAEtB,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA9ChBI,aAuDHkB,ICxDfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.55ec2c20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","import React, { Component } from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n\n    return (\n      <div className={styles.statistics}>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage}%</p>\n      </div>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport styles from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { onLeaveFeedback } = this.props;\n\n    return (\n      <div className={styles.options}>\n        <button\n          className={styles.goodBtn}\n          type=\"button\"\n          name=\"good\"\n          onClick={e => {\n            onLeaveFeedback(e.target.name);\n          }}\n        >\n          Good\n        </button>\n        <button\n          className={styles.neutralBtn}\n          type=\"button\"\n          name=\"neutral\"\n          onClick={e => {\n            onLeaveFeedback(e.target.name);\n          }}\n        >\n          Neutral\n        </button>\n        <button\n          className={styles.badBtn}\n          type=\"button\"\n          name=\"bad\"\n          onClick={e => {\n            onLeaveFeedback(e.target.name);\n          }}\n        >\n          Bad\n        </button>\n      </div>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport styles from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nclass Notification extends Component {\n  render() {\n    const { message } = this.props;\n\n    return <p className={styles.message}>{message}</p>;\n  }\n}\n\nNotification.defaultProps = {\n  message: 'No result',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n\n    return (\n      <>\n        <h2 className={styles.title}>{title}</h2>\n        {children}\n      </>\n    );\n  }\n}\n\nSection.defaultProps = {\n  title: 'Section title',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedback = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.state.good > 0) {\n      return Math.round((this.state.good * 100) / this.countTotalFeedback());\n    }\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.countFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}